[project]
name = "folioclient"
version = "1.0.1"
description = "An API wrapper over the FOLIO LSP API Suite (Formerly OKAPI)."
authors = [
    { name = "Theodor Tolstoy", email = "github.teddes@tolstoy.se" },
    { name = "Brooks Travis", email = "brooks.travis@gmail.com" },
]
license = "MIT"
readme = "README.md"
keywords = ["FOLIO", "ILS", "LSP", "Library Systems", "MARC21", "Library data"]
requires-python = ">=3.10,<4.0"
dependencies = [
    "httpx>=0.28.1",
    "jsonref>=1.1.0",
    "py-openapi-schema-to-json-schema>=0.0.3",
    "python-dateutil>=2.9.0.post0",
    "pyyaml>=6.0.2",
    "tenacity>=9.0.0",
]

[project.urls]
homepage = "https://github.com/FOLIO-FSE/folioclient"

[dependency-groups]
dev = [
    "coverage[toml]>=6.5.0,<7.0.0",
    "mypy>=1.17.1",
    "nox>=2025.5.1",
    "pytest>=8.2.0,<9.0.0",
    "ruff>=0.12.12",
    "pytest-asyncio>=1.2.0",
    "pytest-coverage>=0.0",
    "ty>=0.0.1a22",
    "types-pyyaml>=6.0.12.20250915",
    "pyrefly>=0.37.0",
]
docs = [
    "sphinx>=8.1.3",
    "myst-parser>=4.0.0",
    "sphinx-book-theme>=1.1.3"
]

[project.optional-dependencies]
orjson = ["orjson>=3.11.3,<4.0.0"]

# Build
[build-system]
requires = ["uv_build>=0.8.6,<0.9.0"]
build-backend = "uv_build"

# Linting
[tool.ruff]
line-length = 99
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "build",
    "dist",
    "site-packages",
    "venv",
    "**/tests/*.py",
    "integration_test.py"
]

indent-width = 4
target-version = "py310"

[tool.ruff.lint]
select = ["B", "B9", "C", "E", "F", "S", "W"]
ignore = ["E741"]

fixable = ["ALL"]
unfixable = []

dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402", "F401"]
"**/{tests,docs,tools}/*" = ["E402"]
"**/test_*.py" = ["S101"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

docstring-code-format = false
docstring-code-line-length = "dynamic"

# Testing
[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
pythonpath = ["src"]
markers = [
    "integration: mark the test as an integration test.",
    "ecs: mark test as ECS functionality test.",
    "slow: mark test as slow (deselect with '-m \"not slow\"' option).",
]
